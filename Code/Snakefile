configfile: "config.yaml"

wildcard_constraints:
    filename = ".+"  # Use 'filename' to represent the entire filename

with open(os.path.join(config["inputpath"], "file_list"), "r") as file:
    SAMPLES = [line.strip().split(".")[0] for line in file]

## Basic rule for testing environment. Should take all input files,
## and print them each to a file of the same base name.
# rule all:
#     input:
#         expand(os.path.join(config["outputpath"], "{sample}.txt"), sample=SAMPLES)

# rule testRule:
#     params:
#         "this file corresponds to {sample}"
#     output:
#         os.path.join(config["outputpath"], "{sample}.txt")
#     shell:
#         """
#         echo {params} > {output}
#        """

rule all:
    input:
        expand(os.path.join(config["outputpath"], "Sample_{sample}",
                            "Generated_Data_1st_Bowtie_Alignment_Unmasked_Genome",
                            "genome_alignment_ERCC_{sample}.sam"),
                sample=SAMPLES)

# run bowtie unmasked on samples
rule bowtieUnmasked:
    input:
        scriptPath=os.path.join(config["codepath"], "bowtieUnmaskedGenome.sh"),
        leftReadFile=os.path.join(config["inputpath"], "{sample}.fastq.gz"),
        rightReadFile=os.path.join(config["inputpath"], "{sample}.fastq.gz".replace("R1", "R2")),
        picard=config["picard"]
    params:
        outPath=config["outputpath"],
        codePath=config["codepath"],
        sampleNameLeft="{sample}",
        sampleNameRight="{sample}".replace("R1", "R2"),
        bowtieERCCIndex=config["bowtieERCCIndex"],
        bowtieUnmaskedGenomeIndex=config["bowtieUnmaskedGenomeIndex"]
    output:
        os.path.join(config["outputpath"], "Sample_{sample}",
                    "Generated_Data_1st_Bowtie_Alignment_Unmasked_Genome",
                    "genome_alignment_ERCC_{sample}.sam")
    resources:
        cpus=12
    shell:
        """
        bash {input.scriptPath} {params.sampleNameLeft} {params.sampleNameRight} {input.leftReadFile} \
        {input.rightReadFile} {params.outPath} {params.codePath} {params.bowtieERCCIndex} \
        {params.bowtieUnmaskedGenomeIndex} {input.picard}
        """